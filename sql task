1. Given SQL query will execute successfully: TRUE/FALSE SELECT last_name, job_id, salary AS Sal FROM employees;
ANS: TRUE

2. Identity errors in the following statement: SELECT employee_id, last_name, sal*12 ANNUAL SALARY FROM employees;
ANS: SELECT employee_id, last_name, salary*12 as [ANNUAL SALARY] FROM employees;


3. Write a query to determine the structure of the table 'DEPARTMENTS'
ANS: EXEC sp_help 'dbo.departments';

4. Write a query to determine the unique Job IDs from the EMPLOYEES table.
ANS: 1) select distinct job_id from employees 
     2) select job_id from employees group by job_id

5. Write a query to display the employee number, lastname, salary (oldsalary), salary increased by 15.5% name it has NewSalary and subtract the (NewSalary from OldSalary) name the column as Increment.
ANS: select employee_id as [Employee Number],
	   last_name as LastName, 
	   salary as Oldsalary, 
	   salary + (salary * 0.155) as NewSalary,
	   ((salary + (salary * 0.155)) - salary) as Increment
    from employees;
  
6. Write a query to display the minimum, maximum, sum and average salary for each job type.
ANS: select min(salary) as minimumSalary,
	   max(salary) as MaximumSalary,
	   sum(salary) as SumOfSalary,
	   avg(salary) as AverageOfSalary
     from employees group by job_id
  
7. The HR department needs to find the names and hire dates of all employees who were hired before their managers, along with their managersâ€™ names and hire dates.
ANS: select emp.first_name+' '+ emp.last_name as EmpName,
	   emp.hire_date as HireDate,
	   mgr.first_name+' '+ mgr.last_name as ManagerName,
	   mgr.hire_date as HireDate
	   from employees mgr 
	   inner join employees emp 
	   on emp.employee_id = mgr.manager_id 
	   where emp.hire_date > mgr.hire_date 
	   order by emp.hire_date;
  
8. Create a report for the HR department that displays employee last names, department numbers, and all the employees who work in the same department as a given employee.
ANS: select  a.department_id as DeptNO, a.last_name as LastName, b.last_name as LastName  from employees a inner join employees b on a.department_id = b.department_id and a.first_name <> b.first_name
  
9. Find the highest, lowest, sum, and average salary of all employees. Label the columns Maximum, Minimum, Sum, and Average, respectively. Round your results to the nearest whole number.
ANS: select min(salary) as minimumSalary,
	   max(salary) as MaximumSalary,
	   sum(salary) as SumOfSalary,
	   round(avg(salary),0) as AverageOfSalary
     from employees
  
10. Create a report that displays list of employees whose salary is more than the salary of any employee from department 60.
ANS: select * from employees where salary > (select max(salary) from employees where department_id = 60)
  
11. Create a report that displays last name and salary of every employee who reports to King(Use any manager name instead of King).
ANS: select * from employees where manager_id = any(select employee_id from employees where last_name='king')
  
12. Write a query to display the list of department IDs for departments that do not contain the job Id ST_CLERK(Add this job ST_CLERK to Job table). Use SET Operator for this query
ANS: select department_id from employees where job_id != 'ST_CLERK'
      except 
      select department_id from employees where job_id = 'ST_CLERK';
  
13. Write a query to display the list of employees who work in department 50 and 80. Show employee Id, job Id and department Id by using set operators. - Add 50 and 80 department Id to department table
ANS: select employee_Id,job_id,department_id from employees where department_id = 50
    union 
    select employee_Id,job_id,department_id from employees where department_id = 80
